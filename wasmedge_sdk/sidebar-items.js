window.SIDEBAR_ITEMS = {"enum":[["CompilerOptimizationLevel","Parses in-memory bytes as either the WebAssembly Text format, or a binary WebAssembly module Defines WasmEdge AOT compiler optimization level."],["CompilerOutputFormat","Parses in-memory bytes as either the WebAssembly Text format, or a binary WebAssembly module Defines WasmEdge AOT compiler output binary format."],["ExternalInstanceType","Parses in-memory bytes as either the WebAssembly Text format, or a binary WebAssembly module Defines the type of external WasmEdge instances."],["Mutability","Parses in-memory bytes as either the WebAssembly Text format, or a binary WebAssembly module Defines the mutability property of WasmEdge Global variables."],["RefType","Parses in-memory bytes as either the WebAssembly Text format, or a binary WebAssembly module Defines WasmEdge reference types."],["ValType","Parses in-memory bytes as either the WebAssembly Text format, or a binary WebAssembly module Defines WasmEdge value types."]],"fn":[["wat2wasm","Parses in-memory bytes as either the WebAssembly Text format, or a binary WebAssembly module Parses in-memory bytes as either the WebAssembly Text format, or a binary WebAssembly module."]],"macro":[["params","Used to pass arguments to Func::call, FuncRef::call, Engine::run_func, or Engine::run_func_ref. Notice that to use the macro, it is required to use `WasmVal` trait. If the version of rust used is less than v1.63, please place `#![feature(explicit_generic_args_with_impl_trait)]` on the root of the program."]],"mod":[["config","Defines the structs used to construct configurations."],["error","Parses in-memory bytes as either the WebAssembly Text format, or a binary WebAssembly module Defines WasmEdge error types."],["types","Defines the general types."],["wasi","Defines wasi module instance types, including WasiInstance, WasiNnInstance, wasi-crypto instances."]],"struct":[["Compiler","Defines WasmEdge ahead-of-time(AOT) compiler and the relevant APIs."],["CoreVersion","The version info of WasmEdge core"],["Driver","Defines WasmEdge Driver functions"],["Executor","Defines an execution environment for both pure WASM and compiled WASM."],["ExportType","Defines the types of the exported instances."],["Func","Defines a host function instance."],["FuncRef","Defines a reference to a host function."],["FuncType","Parses in-memory bytes as either the WebAssembly Text format, or a binary WebAssembly module Struct of WasmEdge FuncType."],["FuncTypeBuilder","Defines a type builder for creating a FuncType instance."],["Global","Defines a WebAssembly global variable, which stores a single value of the given GlobalType and a flag indicating whether it is mutable or not."],["GlobalType","Parses in-memory bytes as either the WebAssembly Text format, or a binary WebAssembly module Struct of WasmEdge GlobalType."],["ImportObject","Defines an import object that contains the required import data used when instantiating a module."],["ImportObjectBuilder","Creates a normal, wasi, or wasmedge process import object."],["ImportType","Defines the types of the imported instances."],["Instance","Represents an instantiated module."],["Memory","Defines a linear memory."],["MemoryType","Parses in-memory bytes as either the WebAssembly Text format, or a binary WebAssembly module Struct of WasmEdge MemoryType."],["Module","Defines compiled in-memory representation of an input WASM binary."],["Statistics","Used to collect statistics of the WasmEdge runtime, such as the count of instructions in execution."],["Store","Represents all global state that can be manipulated by WebAssembly programs. A store consists of the runtime representation of all instances of functions, tables, memories, and globals."],["Table","Defines a table storing the references to host functions or external objects."],["TableType","Parses in-memory bytes as either the WebAssembly Text format, or a binary WebAssembly module Struct of WasmEdge TableType."],["Vm","A [Vm] defines a virtual environment for managing WebAssembly programs."],["WasmEdgeProcessInstance","Represents a wasmedge_process module instance."]],"trait":[["AsInstance","The object used as an module instance is required to implement this trait."],["Engine","The object that is used to perform a host function is required to implement this trait."],["WasmVal","Defines the function converting a value of Rust type to the one of Wasm type."],["WasmValType","Describes the mapping of Rust type to Wasm type."],["WasmValTypeList","Describes the mapping of a tuple of Rust types to Wasm types."]],"type":[["CallingFrame",""],["WasmEdgeResult","Parses in-memory bytes as either the WebAssembly Text format, or a binary WebAssembly module The WasmEdge result type."],["WasmValue","WebAssembly value type."]]};